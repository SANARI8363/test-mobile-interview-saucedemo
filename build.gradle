plugins {
    id 'java'
}

group 'co.com.saucelabs'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }

}

apply plugin: 'java'
apply plugin: 'idea'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


ext {
    serenityVersion = '3.2.5'
    serenityCucumberVersion = '3.2.5'
}

dependencies {

    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    implementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-junit:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay:$rootProject.ext.serenityVersion"

    implementation "net.serenity-bdd:serenity-cucumber:$rootProject.ext.serenityCucumberVersion"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-reports:$rootProject.ext.serenityVersion"
    implementation "io.appium:java-client:8.0.0"

    implementation "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-reports:$rootProject.ext.serenityVersion"
    implementation 'mysql:mysql-connector-java:8.0.17'
    implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'org.json:json:20210307'

    testCompile "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:$rootProject.ext.serenityVersion"

    implementation "co.com.devco.automation:automationDevcoLibrary:1.3.8"

    //testImplementation 'junit:junit:4.12'
    //testImplementation 'org.hamcrest:hamcrest-all:1.3'
    //testImplementation 'org.assertj:assertj-core:1.7.0'

}

gradle.startParameter.continueOnFailure = true

tasks.withType(Test) {
    systemProperties = System.properties
    maxParallelForks = Runtime.runtime.availableProcessors()
}


