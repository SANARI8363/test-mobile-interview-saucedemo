group 'co.com.saucelabs'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        google()
    }
    dependencies {
        classpath('net.serenity-bdd:serenity-gradle-plugin:2.5.8')
        classpath('net.serenity-bdd:serenity-single-page-report:2.5.8')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


ext {
    serenityVersion = '3.3.0'
    serenityCucumberVersion = '3.3.0'
}

serenity {
    reports = ["single-page-html"]
}

dependencies {

    implementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-junit:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay:$rootProject.ext.serenityVersion"

    implementation "net.serenity-bdd:serenity-cucumber:$rootProject.ext.serenityCucumberVersion"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-reports:$rootProject.ext.serenityVersion"
    implementation 'io.appium:java-client:8.1.1'

    implementation "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-reports:$rootProject.ext.serenityVersion"
    implementation 'mysql:mysql-connector-java:8.0.30'
    implementation 'org.seleniumhq.selenium:selenium-java:4.3.0'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'org.json:json:20220320'

    implementation "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:$rootProject.ext.serenityVersion"

}

test.finalizedBy(aggregate)

gradle.startParameter.continueOnFailure = true

tasks.withType(Test) {
    systemProperties = System.properties
    maxParallelForks = Runtime.runtime.availableProcessors()
}